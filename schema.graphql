type Account @entity {
  id: Bytes!
  address: Bytes!
  creationDate: BigInt!
  latestInteractionDate: BigInt!
  volumes: [AccountVolumeByPair!]! @derivedFrom(field: "account")
}

type AccountVolumeByPair @entity {
  id: String!

  account: Account!
  updatedDate: BigInt!

  token0: Bytes!
  token1: Bytes!

  token0Sent: BigInt!
  token0Received: BigInt!

  token1Sent: BigInt!
  token1Received: BigInt!

  asMaker: Boolean!
}

type Market @entity {
  id: String!
  outbound_tkn: Bytes! # address
  inbound_tkn: Bytes! # address
  active: Boolean!
  gasbase: BigInt!
}

type Offer @entity {
  id: String!
  latestTransactionHash: Bytes!
  latestLogIndex: BigInt!
  creationDate: BigInt!
  latestUpdateDate: BigInt!
  offerId: BigInt!
  wants: BigInt!
  gives: BigInt!
  gasprice: BigInt!
  gasreq: BigInt!
  gasBase: BigInt!
  prev: BigInt!
  isOpen: Boolean!
  isFailed: Boolean!
  isFilled: Boolean!
  isRetracted: Boolean!
  failedReason: Bytes
  posthookFailReason: Bytes
  deprovisioned: Boolean!
  totalGot: BigInt!
  totalGave: BigInt!
  prevGives: BigInt
  prevWants: BigInt

  market: Market!
  maker: Account!
  owner: Account
  kandel: Kandel
  kandelIndex: BigInt
}

type Order @entity {
  id: String!
  transactionHash: Bytes!
  creationDate: BigInt!

  taker: Account
  takerGot: BigInt
  takerGave: BigInt
  penalty: BigInt
  feePaid: BigInt

  market: Market
  limitOrder: LimitOrder 
}

type LimitOrder @entity {
  id: String!
  creationDate: BigInt!
  latestUpdateDate: BigInt!
  wants: BigInt!
  gives: BigInt!
  expiryDate: BigInt
  fillWants: Boolean!
  fillOrKill: Boolean!
  restingOrder: Boolean!
  realTaker: Account 
  offer: Offer
  isOpen: Boolean

  order: Order! 
}

type KandelDepositWithdraw @entity {
  id: String!
  transactionHash: Bytes!
  date: BigInt!
  token: Bytes!
  amount: BigInt!
  isDeposit: Boolean!

  kandel: Kandel!
}

type Kandel @entity {
  id: Bytes!
  transactionHash: Bytes!
  creationDate: BigInt!

  seeder: Bytes!
  address: Bytes!

  base: Bytes! 
  quote: Bytes!
  deployer: Account!
  admin: Account!

  type: String!

  # Only for kandel AAVE
  reserveId: Bytes
  router: Bytes

  depositedBase: BigInt!
  depositedQuote: BigInt!

  # Parameters
  gasprice: BigInt
  gasreq: BigInt
  compoundRateBase: BigInt
  compoundRateQuote: BigInt
  spread: BigInt
  ratio: BigInt
  length: BigInt

  offerIndexes: [String!]!

  offers: [Offer!]! @derivedFrom(field: "kandel")
  depositWithdraws: [KandelDepositWithdraw!]! @derivedFrom(field: "kandel")
  parameters: [KandelParameters!]! @derivedFrom(field: "kandel")
}

type KandelPopulateRetract @entity {
  id: String!
  transactionHash: Bytes!
  creationDate: BigInt!
  startLogIndex: BigInt!

  isRetract: Boolean!
  offerGives: [String!]!
  
  kandel: Kandel!
}

type KandelParameters @entity {
  id: String!
  transactionHash: Bytes!
  creationDate: BigInt!

  gasprice: BigInt
  gasreq: BigInt
  compoundRateBase: BigInt
  compoundRateQuote: BigInt
  spread: BigInt
  ratio: BigInt
  length: BigInt

  kandel: Kandel!
}

type OrderStack @entity {
  id: String!
  ids: String!
  last: Order
}
