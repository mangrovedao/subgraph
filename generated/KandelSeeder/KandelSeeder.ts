// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewAaveKandel extends ethereum.Event {
  get params(): NewAaveKandel__Params {
    return new NewAaveKandel__Params(this);
  }
}

export class NewAaveKandel__Params {
  _event: NewAaveKandel;

  constructor(event: NewAaveKandel) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get base(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get quote(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get aaveKandel(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get reserveId(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class NewKandel extends ethereum.Event {
  get params(): NewKandel__Params {
    return new NewKandel__Params(this);
  }
}

export class NewKandel__Params {
  _event: NewKandel;

  constructor(event: NewKandel) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get base(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get quote(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get kandel(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class KandelSeeder__sowInputSeedStruct extends ethereum.Tuple {
  get base(): Address {
    return this[0].toAddress();
  }

  get quote(): Address {
    return this[1].toAddress();
  }

  get gasprice(): BigInt {
    return this[2].toBigInt();
  }

  get liquiditySharing(): boolean {
    return this[3].toBoolean();
  }
}

export class KandelSeeder extends ethereum.SmartContract {
  static bind(address: Address): KandelSeeder {
    return new KandelSeeder("KandelSeeder", address);
  }

  KANDEL_GASREQ(): BigInt {
    let result = super.call("KANDEL_GASREQ", "KANDEL_GASREQ():(uint256)", []);

    return result[0].toBigInt();
  }

  try_KANDEL_GASREQ(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "KANDEL_GASREQ",
      "KANDEL_GASREQ():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MGV(): Address {
    let result = super.call("MGV", "MGV():(address)", []);

    return result[0].toAddress();
  }

  try_MGV(): ethereum.CallResult<Address> {
    let result = super.tryCall("MGV", "MGV():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sow(seed: KandelSeeder__sowInputSeedStruct): Address {
    let result = super.call(
      "sow",
      "sow((address,address,uint256,bool)):(address)",
      [ethereum.Value.fromTuple(seed)]
    );

    return result[0].toAddress();
  }

  try_sow(
    seed: KandelSeeder__sowInputSeedStruct
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "sow",
      "sow((address,address,uint256,bool)):(address)",
      [ethereum.Value.fromTuple(seed)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get mgv(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get kandelGasreq(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SowCall extends ethereum.Call {
  get inputs(): SowCall__Inputs {
    return new SowCall__Inputs(this);
  }

  get outputs(): SowCall__Outputs {
    return new SowCall__Outputs(this);
  }
}

export class SowCall__Inputs {
  _call: SowCall;

  constructor(call: SowCall) {
    this._call = call;
  }

  get seed(): SowCallSeedStruct {
    return changetype<SowCallSeedStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SowCall__Outputs {
  _call: SowCall;

  constructor(call: SowCall) {
    this._call = call;
  }

  get kandel(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SowCallSeedStruct extends ethereum.Tuple {
  get base(): Address {
    return this[0].toAddress();
  }

  get quote(): Address {
    return this[1].toAddress();
  }

  get gasprice(): BigInt {
    return this[2].toBigInt();
  }

  get liquiditySharing(): boolean {
    return this[3].toBoolean();
  }
}
