// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Credit extends ethereum.Event {
  get params(): Credit__Params {
    return new Credit__Params(this);
  }
}

export class Credit__Params {
  _event: Credit;

  constructor(event: Credit) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Debit extends ethereum.Event {
  get params(): Debit__Params {
    return new Debit__Params(this);
  }
}

export class Debit__Params {
  _event: Debit;

  constructor(event: Debit) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LogIncident extends ethereum.Event {
  get params(): LogIncident__Params {
    return new LogIncident__Params(this);
  }
}

export class LogIncident__Params {
  _event: LogIncident;

  constructor(event: LogIncident) {
    this._event = event;
  }

  get mangrove(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get outbound_tkn(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get inbound_tkn(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get offerId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get makerData(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get mgvData(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class Mgv extends ethereum.Event {
  get params(): Mgv__Params {
    return new Mgv__Params(this);
  }
}

export class Mgv__Params {
  _event: Mgv;

  constructor(event: Mgv) {
    this._event = event;
  }

  get mgv(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Pair extends ethereum.Event {
  get params(): Pair__Params {
    return new Pair__Params(this);
  }
}

export class Pair__Params {
  _event: Pair;

  constructor(event: Pair) {
    this._event = event;
  }

  get base(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get quote(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PopulateEnd extends ethereum.Event {
  get params(): PopulateEnd__Params {
    return new PopulateEnd__Params(this);
  }
}

export class PopulateEnd__Params {
  _event: PopulateEnd;

  constructor(event: PopulateEnd) {
    this._event = event;
  }
}

export class PopulateStart extends ethereum.Event {
  get params(): PopulateStart__Params {
    return new PopulateStart__Params(this);
  }
}

export class PopulateStart__Params {
  _event: PopulateStart;

  constructor(event: PopulateStart) {
    this._event = event;
  }
}

export class RetractEnd extends ethereum.Event {
  get params(): RetractEnd__Params {
    return new RetractEnd__Params(this);
  }
}

export class RetractEnd__Params {
  _event: RetractEnd;

  constructor(event: RetractEnd) {
    this._event = event;
  }
}

export class RetractStart extends ethereum.Event {
  get params(): RetractStart__Params {
    return new RetractStart__Params(this);
  }
}

export class RetractStart__Params {
  _event: RetractStart;

  constructor(event: RetractStart) {
    this._event = event;
  }
}

export class SetAdmin extends ethereum.Event {
  get params(): SetAdmin__Params {
    return new SetAdmin__Params(this);
  }
}

export class SetAdmin__Params {
  _event: SetAdmin;

  constructor(event: SetAdmin) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetCompoundRates extends ethereum.Event {
  get params(): SetCompoundRates__Params {
    return new SetCompoundRates__Params(this);
  }
}

export class SetCompoundRates__Params {
  _event: SetCompoundRates;

  constructor(event: SetCompoundRates) {
    this._event = event;
  }

  get compoundRateBase(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get compoundRateQuote(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetGasprice extends ethereum.Event {
  get params(): SetGasprice__Params {
    return new SetGasprice__Params(this);
  }
}

export class SetGasprice__Params {
  _event: SetGasprice;

  constructor(event: SetGasprice) {
    this._event = event;
  }

  get value(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetGasreq extends ethereum.Event {
  get params(): SetGasreq__Params {
    return new SetGasreq__Params(this);
  }
}

export class SetGasreq__Params {
  _event: SetGasreq;

  constructor(event: SetGasreq) {
    this._event = event;
  }

  get value(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetGeometricParams extends ethereum.Event {
  get params(): SetGeometricParams__Params {
    return new SetGeometricParams__Params(this);
  }
}

export class SetGeometricParams__Params {
  _event: SetGeometricParams;

  constructor(event: SetGeometricParams) {
    this._event = event;
  }

  get spread(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ratio(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetIndexMapping extends ethereum.Event {
  get params(): SetIndexMapping__Params {
    return new SetIndexMapping__Params(this);
  }
}

export class SetIndexMapping__Params {
  _event: SetIndexMapping;

  constructor(event: SetIndexMapping) {
    this._event = event;
  }

  get ba(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get offerId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetLength extends ethereum.Event {
  get params(): SetLength__Params {
    return new SetLength__Params(this);
  }
}

export class SetLength__Params {
  _event: SetLength;

  constructor(event: SetLength) {
    this._event = event;
  }

  get value(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetReserveId extends ethereum.Event {
  get params(): SetReserveId__Params {
    return new SetReserveId__Params(this);
  }
}

export class SetReserveId__Params {
  _event: SetReserveId;

  constructor(event: SetReserveId) {
    this._event = event;
  }

  get reserveId(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetRouter extends ethereum.Event {
  get params(): SetRouter__Params {
    return new SetRouter__Params(this);
  }
}

export class SetRouter__Params {
  _event: SetRouter;

  constructor(event: SetRouter) {
    this._event = event;
  }

  get router(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Kandel__makerExecuteInputOrderStruct extends ethereum.Tuple {
  get outbound_tkn(): Address {
    return this[0].toAddress();
  }

  get inbound_tkn(): Address {
    return this[1].toAddress();
  }

  get offerId(): BigInt {
    return this[2].toBigInt();
  }

  get offer(): BigInt {
    return this[3].toBigInt();
  }

  get wants(): BigInt {
    return this[4].toBigInt();
  }

  get gives(): BigInt {
    return this[5].toBigInt();
  }

  get offerDetail(): BigInt {
    return this[6].toBigInt();
  }

  get global(): BigInt {
    return this[7].toBigInt();
  }

  get local(): BigInt {
    return this[8].toBigInt();
  }
}

export class Kandel__paramsResult {
  value0: i32;
  value1: i32;
  value2: i32;
  value3: i32;
  value4: i32;
  value5: i32;
  value6: i32;

  constructor(
    value0: i32,
    value1: i32,
    value2: i32,
    value3: i32,
    value4: i32,
    value5: i32,
    value6: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6))
    );
    return map;
  }

  getGasprice(): i32 {
    return this.value0;
  }

  getGasreq(): i32 {
    return this.value1;
  }

  getRatio(): i32 {
    return this.value2;
  }

  getCompoundRateBase(): i32 {
    return this.value3;
  }

  getCompoundRateQuote(): i32 {
    return this.value4;
  }

  getSpread(): i32 {
    return this.value5;
  }

  getPricePoints(): i32 {
    return this.value6;
  }
}

export class Kandel extends ethereum.SmartContract {
  static bind(address: Address): Kandel {
    return new Kandel("Kandel", address);
  }

  BASE(): Address {
    let result = super.call("BASE", "BASE():(address)", []);

    return result[0].toAddress();
  }

  try_BASE(): ethereum.CallResult<Address> {
    let result = super.tryCall("BASE", "BASE():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  MGV(): Address {
    let result = super.call("MGV", "MGV():(address)", []);

    return result[0].toAddress();
  }

  try_MGV(): ethereum.CallResult<Address> {
    let result = super.tryCall("MGV", "MGV():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  NO_ROUTER(): Address {
    let result = super.call("NO_ROUTER", "NO_ROUTER():(address)", []);

    return result[0].toAddress();
  }

  try_NO_ROUTER(): ethereum.CallResult<Address> {
    let result = super.tryCall("NO_ROUTER", "NO_ROUTER():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  OFFER_GASREQ(): BigInt {
    let result = super.call("OFFER_GASREQ", "OFFER_GASREQ():(uint256)", []);

    return result[0].toBigInt();
  }

  try_OFFER_GASREQ(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("OFFER_GASREQ", "OFFER_GASREQ():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PRECISION(): BigInt {
    let result = super.call("PRECISION", "PRECISION():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PRECISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PRECISION", "PRECISION():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  QUOTE(): Address {
    let result = super.call("QUOTE", "QUOTE():(address)", []);

    return result[0].toAddress();
  }

  try_QUOTE(): ethereum.CallResult<Address> {
    let result = super.tryCall("QUOTE", "QUOTE():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  RESERVE_ID(): Address {
    let result = super.call("RESERVE_ID", "RESERVE_ID():(address)", []);

    return result[0].toAddress();
  }

  try_RESERVE_ID(): ethereum.CallResult<Address> {
    let result = super.tryCall("RESERVE_ID", "RESERVE_ID():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  approve(token: Address, spender: Address, amount: BigInt): boolean {
    let result = super.call(
      "approve",
      "approve(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_approve(
    token: Address,
    spender: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "approve",
      "approve(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getOffer(ba: i32, index: BigInt): BigInt {
    let result = super.call("getOffer", "getOffer(uint8,uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba)),
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toBigInt();
  }

  try_getOffer(ba: i32, index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOffer",
      "getOffer(uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba)),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  indexOfOfferId(ba: i32, offerId: BigInt): BigInt {
    let result = super.call(
      "indexOfOfferId",
      "indexOfOfferId(uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba)),
        ethereum.Value.fromUnsignedBigInt(offerId)
      ]
    );

    return result[0].toBigInt();
  }

  try_indexOfOfferId(ba: i32, offerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "indexOfOfferId",
      "indexOfOfferId(uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba)),
        ethereum.Value.fromUnsignedBigInt(offerId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  makerExecute(order: Kandel__makerExecuteInputOrderStruct): Bytes {
    let result = super.call(
      "makerExecute",
      "makerExecute((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)):(bytes32)",
      [ethereum.Value.fromTuple(order)]
    );

    return result[0].toBytes();
  }

  try_makerExecute(
    order: Kandel__makerExecuteInputOrderStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "makerExecute",
      "makerExecute((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)):(bytes32)",
      [ethereum.Value.fromTuple(order)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  offerGasreq(): BigInt {
    let result = super.call("offerGasreq", "offerGasreq():(uint256)", []);

    return result[0].toBigInt();
  }

  try_offerGasreq(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("offerGasreq", "offerGasreq():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  offerIdOfIndex(ba: i32, index: BigInt): BigInt {
    let result = super.call(
      "offerIdOfIndex",
      "offerIdOfIndex(uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba)),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toBigInt();
  }

  try_offerIdOfIndex(ba: i32, index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "offerIdOfIndex",
      "offerIdOfIndex(uint8,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba)),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  offeredVolume(ba: i32): BigInt {
    let result = super.call("offeredVolume", "offeredVolume(uint8):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba))
    ]);

    return result[0].toBigInt();
  }

  try_offeredVolume(ba: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "offeredVolume",
      "offeredVolume(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  params(): Kandel__paramsResult {
    let result = super.call(
      "params",
      "params():(uint16,uint24,uint24,uint24,uint24,uint8,uint8)",
      []
    );

    return new Kandel__paramsResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toI32(),
      result[3].toI32(),
      result[4].toI32(),
      result[5].toI32(),
      result[6].toI32()
    );
  }

  try_params(): ethereum.CallResult<Kandel__paramsResult> {
    let result = super.tryCall(
      "params",
      "params():(uint16,uint24,uint24,uint24,uint24,uint8,uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Kandel__paramsResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toI32(),
        value[3].toI32(),
        value[4].toI32(),
        value[5].toI32(),
        value[6].toI32()
      )
    );
  }

  pending(ba: i32): BigInt {
    let result = super.call("pending", "pending(uint8):(int256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba))
    ]);

    return result[0].toBigInt();
  }

  try_pending(ba: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall("pending", "pending(uint8):(int256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  provisionOf(
    outbound_tkn: Address,
    inbound_tkn: Address,
    offerId: BigInt
  ): BigInt {
    let result = super.call(
      "provisionOf",
      "provisionOf(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(outbound_tkn),
        ethereum.Value.fromAddress(inbound_tkn),
        ethereum.Value.fromUnsignedBigInt(offerId)
      ]
    );

    return result[0].toBigInt();
  }

  try_provisionOf(
    outbound_tkn: Address,
    inbound_tkn: Address,
    offerId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "provisionOf",
      "provisionOf(address,address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(outbound_tkn),
        ethereum.Value.fromAddress(inbound_tkn),
        ethereum.Value.fromUnsignedBigInt(offerId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  reserveBalance(ba: i32): BigInt {
    let result = super.call(
      "reserveBalance",
      "reserveBalance(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba))]
    );

    return result[0].toBigInt();
  }

  try_reserveBalance(ba: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reserveBalance",
      "reserveBalance(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ba))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  router(): Address {
    let result = super.call("router", "router():(address)", []);

    return result[0].toAddress();
  }

  try_router(): ethereum.CallResult<Address> {
    let result = super.tryCall("router", "router():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get mgv(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get base(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get quote(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get gasreq(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get gasprice(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get reserveId(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ActivateCall extends ethereum.Call {
  get inputs(): ActivateCall__Inputs {
    return new ActivateCall__Inputs(this);
  }

  get outputs(): ActivateCall__Outputs {
    return new ActivateCall__Outputs(this);
  }
}

export class ActivateCall__Inputs {
  _call: ActivateCall;

  constructor(call: ActivateCall) {
    this._call = call;
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class ActivateCall__Outputs {
  _call: ActivateCall;

  constructor(call: ActivateCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DepositFundsCall extends ethereum.Call {
  get inputs(): DepositFundsCall__Inputs {
    return new DepositFundsCall__Inputs(this);
  }

  get outputs(): DepositFundsCall__Outputs {
    return new DepositFundsCall__Outputs(this);
  }
}

export class DepositFundsCall__Inputs {
  _call: DepositFundsCall;

  constructor(call: DepositFundsCall) {
    this._call = call;
  }

  get baseAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get quoteAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositFundsCall__Outputs {
  _call: DepositFundsCall;

  constructor(call: DepositFundsCall) {
    this._call = call;
  }
}

export class MakerExecuteCall extends ethereum.Call {
  get inputs(): MakerExecuteCall__Inputs {
    return new MakerExecuteCall__Inputs(this);
  }

  get outputs(): MakerExecuteCall__Outputs {
    return new MakerExecuteCall__Outputs(this);
  }
}

export class MakerExecuteCall__Inputs {
  _call: MakerExecuteCall;

  constructor(call: MakerExecuteCall) {
    this._call = call;
  }

  get order(): MakerExecuteCallOrderStruct {
    return changetype<MakerExecuteCallOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class MakerExecuteCall__Outputs {
  _call: MakerExecuteCall;

  constructor(call: MakerExecuteCall) {
    this._call = call;
  }

  get ret(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class MakerExecuteCallOrderStruct extends ethereum.Tuple {
  get outbound_tkn(): Address {
    return this[0].toAddress();
  }

  get inbound_tkn(): Address {
    return this[1].toAddress();
  }

  get offerId(): BigInt {
    return this[2].toBigInt();
  }

  get offer(): BigInt {
    return this[3].toBigInt();
  }

  get wants(): BigInt {
    return this[4].toBigInt();
  }

  get gives(): BigInt {
    return this[5].toBigInt();
  }

  get offerDetail(): BigInt {
    return this[6].toBigInt();
  }

  get global(): BigInt {
    return this[7].toBigInt();
  }

  get local(): BigInt {
    return this[8].toBigInt();
  }
}

export class MakerPosthookCall extends ethereum.Call {
  get inputs(): MakerPosthookCall__Inputs {
    return new MakerPosthookCall__Inputs(this);
  }

  get outputs(): MakerPosthookCall__Outputs {
    return new MakerPosthookCall__Outputs(this);
  }
}

export class MakerPosthookCall__Inputs {
  _call: MakerPosthookCall;

  constructor(call: MakerPosthookCall) {
    this._call = call;
  }

  get order(): MakerPosthookCallOrderStruct {
    return changetype<MakerPosthookCallOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get result(): MakerPosthookCallResultStruct {
    return changetype<MakerPosthookCallResultStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class MakerPosthookCall__Outputs {
  _call: MakerPosthookCall;

  constructor(call: MakerPosthookCall) {
    this._call = call;
  }
}

export class MakerPosthookCallOrderStruct extends ethereum.Tuple {
  get outbound_tkn(): Address {
    return this[0].toAddress();
  }

  get inbound_tkn(): Address {
    return this[1].toAddress();
  }

  get offerId(): BigInt {
    return this[2].toBigInt();
  }

  get offer(): BigInt {
    return this[3].toBigInt();
  }

  get wants(): BigInt {
    return this[4].toBigInt();
  }

  get gives(): BigInt {
    return this[5].toBigInt();
  }

  get offerDetail(): BigInt {
    return this[6].toBigInt();
  }

  get global(): BigInt {
    return this[7].toBigInt();
  }

  get local(): BigInt {
    return this[8].toBigInt();
  }
}

export class MakerPosthookCallResultStruct extends ethereum.Tuple {
  get makerData(): Bytes {
    return this[0].toBytes();
  }

  get mgvData(): Bytes {
    return this[1].toBytes();
  }
}

export class PopulateCall extends ethereum.Call {
  get inputs(): PopulateCall__Inputs {
    return new PopulateCall__Inputs(this);
  }

  get outputs(): PopulateCall__Outputs {
    return new PopulateCall__Outputs(this);
  }
}

export class PopulateCall__Inputs {
  _call: PopulateCall;

  constructor(call: PopulateCall) {
    this._call = call;
  }

  get distribution(): PopulateCallDistributionStruct {
    return changetype<PopulateCallDistributionStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get pivotIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get firstAskIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get parameters(): PopulateCallParametersStruct {
    return changetype<PopulateCallParametersStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get baseAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get quoteAmount(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class PopulateCall__Outputs {
  _call: PopulateCall;

  constructor(call: PopulateCall) {
    this._call = call;
  }
}

export class PopulateCallDistributionStruct extends ethereum.Tuple {
  get indices(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get baseDist(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get quoteDist(): Array<BigInt> {
    return this[2].toBigIntArray();
  }
}

export class PopulateCallParametersStruct extends ethereum.Tuple {
  get gasprice(): i32 {
    return this[0].toI32();
  }

  get gasreq(): i32 {
    return this[1].toI32();
  }

  get ratio(): i32 {
    return this[2].toI32();
  }

  get compoundRateBase(): i32 {
    return this[3].toI32();
  }

  get compoundRateQuote(): i32 {
    return this[4].toI32();
  }

  get spread(): i32 {
    return this[5].toI32();
  }

  get pricePoints(): i32 {
    return this[6].toI32();
  }
}

export class PopulateChunkCall extends ethereum.Call {
  get inputs(): PopulateChunkCall__Inputs {
    return new PopulateChunkCall__Inputs(this);
  }

  get outputs(): PopulateChunkCall__Outputs {
    return new PopulateChunkCall__Outputs(this);
  }
}

export class PopulateChunkCall__Inputs {
  _call: PopulateChunkCall;

  constructor(call: PopulateChunkCall) {
    this._call = call;
  }

  get distribution(): PopulateChunkCallDistributionStruct {
    return changetype<PopulateChunkCallDistributionStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get pivotIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get firstAskIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class PopulateChunkCall__Outputs {
  _call: PopulateChunkCall;

  constructor(call: PopulateChunkCall) {
    this._call = call;
  }
}

export class PopulateChunkCallDistributionStruct extends ethereum.Tuple {
  get indices(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get baseDist(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get quoteDist(): Array<BigInt> {
    return this[2].toBigIntArray();
  }
}

export class RetractAndWithdrawCall extends ethereum.Call {
  get inputs(): RetractAndWithdrawCall__Inputs {
    return new RetractAndWithdrawCall__Inputs(this);
  }

  get outputs(): RetractAndWithdrawCall__Outputs {
    return new RetractAndWithdrawCall__Outputs(this);
  }
}

export class RetractAndWithdrawCall__Inputs {
  _call: RetractAndWithdrawCall;

  constructor(call: RetractAndWithdrawCall) {
    this._call = call;
  }

  get from(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get to(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get baseAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get quoteAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get freeWei(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class RetractAndWithdrawCall__Outputs {
  _call: RetractAndWithdrawCall;

  constructor(call: RetractAndWithdrawCall) {
    this._call = call;
  }
}

export class RetractOffersCall extends ethereum.Call {
  get inputs(): RetractOffersCall__Inputs {
    return new RetractOffersCall__Inputs(this);
  }

  get outputs(): RetractOffersCall__Outputs {
    return new RetractOffersCall__Outputs(this);
  }
}

export class RetractOffersCall__Inputs {
  _call: RetractOffersCall;

  constructor(call: RetractOffersCall) {
    this._call = call;
  }

  get from(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get to(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RetractOffersCall__Outputs {
  _call: RetractOffersCall;

  constructor(call: RetractOffersCall) {
    this._call = call;
  }
}

export class SetAdminCall extends ethereum.Call {
  get inputs(): SetAdminCall__Inputs {
    return new SetAdminCall__Inputs(this);
  }

  get outputs(): SetAdminCall__Outputs {
    return new SetAdminCall__Outputs(this);
  }
}

export class SetAdminCall__Inputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }

  get admin_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAdminCall__Outputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }
}

export class SetCompoundRatesCall extends ethereum.Call {
  get inputs(): SetCompoundRatesCall__Inputs {
    return new SetCompoundRatesCall__Inputs(this);
  }

  get outputs(): SetCompoundRatesCall__Outputs {
    return new SetCompoundRatesCall__Outputs(this);
  }
}

export class SetCompoundRatesCall__Inputs {
  _call: SetCompoundRatesCall;

  constructor(call: SetCompoundRatesCall) {
    this._call = call;
  }

  get compoundRateBase(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get compoundRateQuote(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetCompoundRatesCall__Outputs {
  _call: SetCompoundRatesCall;

  constructor(call: SetCompoundRatesCall) {
    this._call = call;
  }
}

export class SetGaspriceCall extends ethereum.Call {
  get inputs(): SetGaspriceCall__Inputs {
    return new SetGaspriceCall__Inputs(this);
  }

  get outputs(): SetGaspriceCall__Outputs {
    return new SetGaspriceCall__Outputs(this);
  }
}

export class SetGaspriceCall__Inputs {
  _call: SetGaspriceCall;

  constructor(call: SetGaspriceCall) {
    this._call = call;
  }

  get gasprice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetGaspriceCall__Outputs {
  _call: SetGaspriceCall;

  constructor(call: SetGaspriceCall) {
    this._call = call;
  }
}

export class SetGasreqCall extends ethereum.Call {
  get inputs(): SetGasreqCall__Inputs {
    return new SetGasreqCall__Inputs(this);
  }

  get outputs(): SetGasreqCall__Outputs {
    return new SetGasreqCall__Outputs(this);
  }
}

export class SetGasreqCall__Inputs {
  _call: SetGasreqCall;

  constructor(call: SetGasreqCall) {
    this._call = call;
  }

  get gasreq(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetGasreqCall__Outputs {
  _call: SetGasreqCall;

  constructor(call: SetGasreqCall) {
    this._call = call;
  }
}

export class SetRouterCall extends ethereum.Call {
  get inputs(): SetRouterCall__Inputs {
    return new SetRouterCall__Inputs(this);
  }

  get outputs(): SetRouterCall__Outputs {
    return new SetRouterCall__Outputs(this);
  }
}

export class SetRouterCall__Inputs {
  _call: SetRouterCall;

  constructor(call: SetRouterCall) {
    this._call = call;
  }

  get router_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRouterCall__Outputs {
  _call: SetRouterCall;

  constructor(call: SetRouterCall) {
    this._call = call;
  }
}

export class WithdrawFromMangroveCall extends ethereum.Call {
  get inputs(): WithdrawFromMangroveCall__Inputs {
    return new WithdrawFromMangroveCall__Inputs(this);
  }

  get outputs(): WithdrawFromMangroveCall__Outputs {
    return new WithdrawFromMangroveCall__Outputs(this);
  }
}

export class WithdrawFromMangroveCall__Inputs {
  _call: WithdrawFromMangroveCall;

  constructor(call: WithdrawFromMangroveCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawFromMangroveCall__Outputs {
  _call: WithdrawFromMangroveCall;

  constructor(call: WithdrawFromMangroveCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get baseAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get quoteAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}
